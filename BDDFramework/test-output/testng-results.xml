<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-11T18:43:23 IST" name="Default suite" finished-at="2020-07-11T18:44:15 IST" duration-ms="51778">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.RunSteps@2e1d27ba]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2020-07-11T18:43:23 IST" name="Default test" finished-at="2020-07-11T18:44:15 IST" duration-ms="51778">
      <class name="runner.RunSteps">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.RunSteps@2e1d27ba]" started-at="2020-07-11T18:43:23 IST" name="setUpClass" finished-at="2020-07-11T18:43:24 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.RunSteps@2e1d27ba]" started-at="2020-07-11T18:43:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-07-11T18:43:42 IST" duration-ms="18431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Positive flow to create a lead"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["CreateLead in Leaftaps"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.RunSteps@2e1d27ba]" started-at="2020-07-11T18:43:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-07-11T18:43:58 IST" duration-ms="16248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Positive flow to create a lead"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["CreateLead in Leaftaps"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.RunSteps@2e1d27ba]" started-at="2020-07-11T18:43:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-07-11T18:44:15 IST" duration-ms="16677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Negative flow to create a lead"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["CreateLead in Leaftaps"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.RunSteps@2e1d27ba]" started-at="2020-07-11T18:44:15 IST" name="tearDownClass" finished-at="2020-07-11T18:44:15 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.RunSteps -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
